buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.webjars:webjars-locator-core")
    compile("org.webjars:sockjs-client:1.0.2")
    compile("org.webjars:stomp-websocket:2.3.3")
    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.4.1")
//    compile("org.webjars:requirejs:2.3.6")

    compile("org.yaml:snakeyaml:1.21")

    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task copyStatic(type:Copy) {
    from 'src/main/resources'
    into 'build/resources/main'
}

def tsSrcDir = "${projectDir}/src/main/ts"
def tsBuildDir = "${buildDir}/resources/main/static/ts"

task compileTs (type:Exec) {
    inputs.dir file(tsSrcDir)
    outputs.dir file(tsBuildDir)
    executable "${projectDir}/bin/compilerTs.sh"
    standardOutput System.out
    args file(tsSrcDir).listFiles((FilenameFilter){dir,name ->  name.endsWith(".ts")})
    args ("--outDir", tsBuildDir)
}

build {
    dependsOn compileTs
}